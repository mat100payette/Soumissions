<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:lib="clr-namespace:SilverlightCustomControls"
    xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="SilverlightCustomControls.FeuilleCommande"
    mc:Ignorable="d"
    d:DesignHeight="1056" Width="844">

    <UserControl.Resources>
        <Style x:Key="AlignRight" TargetType="sdk:DataGridCell">
            <Setter Property="HorizontalContentAlignment" Value="Right" />
        </Style>

        <Style x:Key="GridHeader" TargetType="sdk:DataGridColumnHeader">
            <Setter Property="Background" Value="White"/>
        </Style>

        <Style x:Key="DataGridTextColumnStyle" TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <lib:CurrencyConverter x:Key="CurrencyConverter"/>

        <ControlTemplate x:Key="ValidationToolTipTemplate">
            <Grid x:Name="Root" RenderTransformOrigin="0,0" Opacity="0" Margin="5,0">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="OpenStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="xform" X="-25"/>
                </Grid.RenderTransform>
                <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                <Border Background="#FFDC000C" CornerRadius="2"/>
                <Border CornerRadius="2">
                    <TextBlock UseLayoutRounding="false" Text="{Binding (Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap" Margin="8,4,8,4" MaxWidth="250" Foreground="White"/>
                </Border>
            </Grid>
        </ControlTemplate>
        <Style TargetType="ComboBox">
            <Setter Property="Padding" Value="6,2,25,2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="Black"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                                    <Setter Property="Foreground" Value="#FF333333"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black"></SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Padding" Value="3"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                                                    <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                    <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                    <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay2"/>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
                                                                    <ColorAnimation Duration="0" To="#E5FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                    <ColorAnimation Duration="0" To="#BCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                    <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                    <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="CheckStates">
                                                            <VisualState x:Name="Checked">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay3"/>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                    <ColorAnimation Duration="0" To="#E5FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                    <ColorAnimation Duration="0" To="#BCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                    <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                    <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unchecked"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unfocused"/>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" RadiusY="3" RadiusX="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                    <Rectangle x:Name="BackgroundOverlay" Fill="White" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                    <Rectangle x:Name="BackgroundOverlay2" Fill="White" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                    <Rectangle x:Name="BackgroundGradient" Margin="{TemplateBinding BorderThickness}" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="1">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                    <Rectangle x:Name="BackgroundOverlay3" Fill="White" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                    <Rectangle x:Name="BackgroundGradient2" Margin="{TemplateBinding BorderThickness}" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="1">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                    <Rectangle x:Name="Highlight" IsHitTestVisible="false" Margin="{TemplateBinding BorderThickness}" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="FocusedDropDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <System:Boolean>True</System:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ContentPresenterBorder">
                                <Grid>
                                    <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                                        <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                                            <Path.Fill>
                                                <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
                                            </Path.Fill>
                                        </Path>
                                    </ToggleButton>
                                    <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBlock Text=" "/>
                                    </ContentPresenter>
                                </Grid>
                            </Border>
                            <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                            <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                                </Grid>
                            </Border>
                            <Popup x:Name="Popup">
                                <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
            <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="Translation" X="-25"/>
                </Grid.RenderTransform>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="OpenStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation"/>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                <Border Background="#FFDC000C" CornerRadius="2">
                    <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
                </Border>
            </Grid>
        </ControlTemplate>
        <Style TargetType="sdk:AutoCompleteBox">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="Black"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFFFFFFF"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="MinWidth" Value="45"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:AutoCompleteBox">
                        <Grid Opacity="{TemplateBinding Opacity}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="PopupStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="PopupOpened"/>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="PopupClosed"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="PopupOpened">
                                        <Storyboard>
                                            <DoubleAnimation To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PopupBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PopupClosed">
                                        <Storyboard>
                                            <DoubleAnimation To="0.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PopupBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <System:Boolean>True</System:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TextBox x:Name="Text" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" IsTabStop="True" Margin="0" Padding="{TemplateBinding Padding}" Style="{TemplateBinding TextBoxStyle}"/>
                            <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource CommonValidationToolTipTemplate}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                                </Grid>
                            </Border>
                            <Popup x:Name="Popup">
                                <Grid Opacity="{TemplateBinding Opacity}">
                                    <Border x:Name="PopupBorder" BorderThickness="0" Background="#11000000" HorizontalAlignment="Stretch" Opacity="0">
                                        <Border.RenderTransform>
                                            <TranslateTransform X="1" Y="1"/>
                                        </Border.RenderTransform>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" HorizontalAlignment="Stretch" Opacity="1.0" Padding="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFDDDDDD" Offset="0"/>
                                                    <GradientStop Color="#AADDDDDD" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform X="-1" Y="-1"/>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                            <ListBox x:Name="Selector" BorderThickness="0" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ItemTemplate="{TemplateBinding ItemTemplate}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                        </Border>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="#FFFFFFFF"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="Black"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid x:Name="RootElement">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <System:Boolean>True</System:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1">
                                <Grid>
                                    <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                                    <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                        <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                            <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                            <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                    <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid x:Name="LayoutRoot" Background="White" Margin="0,0,10,0">
        <TextBlock x:Name="txtInfos" HorizontalAlignment="Left" Height="61" Margin="223,21,0,0" TextWrapping="Wrap" 
                   Text="2121, rue Nobel, Ste-Julie (Québec) J3E 1Z9&#xA; Tél: (514) 874-9050 / Fax: (450) 649-8756&#xA; Ligne directe / Watts line: 1-800-363-9197"
                   VerticalAlignment="Top" Width="281" FontSize="12" FontFamily="Arial" TextAlignment="Right"/>
        <Rectangle Fill="#FFF4F4F5" Height="30" Margin="596,21,69,0" Stroke="Black" VerticalAlignment="Top"/>

        <TextBlock x:Name="txtVendu" HorizontalAlignment="Left" Height="27" Margin="62,107,0,0" TextWrapping="Wrap" Text="VENDU À:" 
                   VerticalAlignment="Top" Width="68" FontFamily="Arial" FontSize="12" FontWeight="Bold" TextDecorations="Underline" TextAlignment="Right"/>

        <sdk:DataGrid Name="GridModeles" HorizontalAlignment="Left" Height="291" Margin="40,430,0,0" VerticalAlignment="Top" Width="741" AutoGenerateColumns="False"
                      CanUserResizeColumns="False" CanUserReorderColumns="False" GridLinesVisibility="All" IsReadOnly="True" 
                      ColumnHeaderHeight="25" HorizontalScrollBarVisibility="Disabled" HeadersVisibility="Column" ColumnHeaderStyle="{x:Null}">
            <sdk:DataGrid.Columns>
                <sdk:DataGridTextColumn Binding="{Binding Item1, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserSort="True" CanUserReorder="False" CellStyle="{x:Null}" CanUserResize="False" 
                                        ClipboardContentBinding="{x:Null}" DisplayIndex="-1" DragIndicatorStyle="{x:Null}" EditingElementStyle="{x:Null}" 
                                        ElementStyle="{x:Null}" Foreground="Black" FontWeight="Normal" FontStyle="Normal"
                                        Header=" " IsReadOnly="True" MaxWidth="Infinity" MinWidth="0" SortMemberPath="{x:Null}" Visibility="Visible" 
                                        Width="50" FontFamily="Arial" FontSize="13.333">
                    <sdk:DataGridTextColumn.HeaderStyle>
                        <Style TargetType="sdk:DataGridColumnHeader">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Height="150">
                                            <TextBlock>
                                                <Run Text="Qté"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Background" Value="White"/>
                        </Style>
                    </sdk:DataGridTextColumn.HeaderStyle>
                </sdk:DataGridTextColumn>
                <sdk:DataGridTextColumn Binding="{Binding Item2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserSort="True" CanUserReorder="False" CellStyle="{x:Null}" CanUserResize="False" 
                                        ClipboardContentBinding="{x:Null}" DisplayIndex="-1" DragIndicatorStyle="{x:Null}" EditingElementStyle="{x:Null}" 
                                        ElementStyle="{StaticResource DataGridTextColumnStyle}" Foreground="{x:Null}" FontWeight="Normal" FontStyle="Normal" FontSize="10.667" FontFamily="Arial"  
                                        Header=" " IsReadOnly="True" MaxWidth="Infinity" MinWidth="0" SortMemberPath="{x:Null}" 
                                        Visibility="Visible" Width="197">
                    <sdk:DataGridTextColumn.HeaderStyle>
                        <Style TargetType="sdk:DataGridColumnHeader">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Height="150">
                                            <TextBlock>
                                                <Run Text="Modèle"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </sdk:DataGridTextColumn.HeaderStyle>
                </sdk:DataGridTextColumn>
                <sdk:DataGridTextColumn Binding="{Binding Item3, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserSort="True" CanUserReorder="False" CellStyle="{x:Null}" CanUserResize="False" 
                                        ClipboardContentBinding="{x:Null}" DisplayIndex="-1" DragIndicatorStyle="{x:Null}" EditingElementStyle="{x:Null}" 
                                        ElementStyle="{StaticResource DataGridTextColumnStyle}" Foreground="{x:Null}" FontWeight="Normal" FontStyle="Normal" Header=" " IsReadOnly="True" 
                                        MaxWidth="Infinity" MinWidth="0" SortMemberPath="{x:Null}" Visibility="Visible" Width="300" FontSize="10.667" FontFamily="Arial">
                    <sdk:DataGridTextColumn.HeaderStyle>
                        <Style TargetType="sdk:DataGridColumnHeader">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Height="150">
                                            <TextBlock>
                                                <Run Text="Description"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </sdk:DataGridTextColumn.HeaderStyle>
                </sdk:DataGridTextColumn>
                <sdk:DataGridTextColumn Binding="{Binding Item4, Converter={StaticResource CurrencyConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                        CanUserSort="True" CanUserReorder="False" CellStyle="{StaticResource AlignRight}" CanUserResize="False" 
                                        ClipboardContentBinding="{x:Null}" DisplayIndex="-1" DragIndicatorStyle="{x:Null}" EditingElementStyle="{x:Null}" 
                                        ElementStyle="{x:Null}" Foreground="{x:Null}" FontWeight="Normal" FontStyle="Normal" Header=" " IsReadOnly="True" 
                                        MaxWidth="Infinity" MinWidth="0" SortMemberPath="{x:Null}" Visibility="Visible" Width="100" FontSize="13.333" FontFamily="Arial">
                    <sdk:DataGridTextColumn.HeaderStyle>
                        <Style TargetType="sdk:DataGridColumnHeader">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Height="150">
                                            <TextBlock>
                                                <Run Text="Prix Unitaire"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </sdk:DataGridTextColumn.HeaderStyle>
                </sdk:DataGridTextColumn>
                <sdk:DataGridTextColumn Binding="{Binding Item5, Converter={StaticResource CurrencyConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                        CanUserSort="True" CanUserReorder="False" CellStyle="{StaticResource AlignRight}" CanUserResize="False" 
                                        ClipboardContentBinding="{x:Null}" DisplayIndex="-1" DragIndicatorStyle="{x:Null}" EditingElementStyle="{x:Null}" 
                                        ElementStyle="{x:Null}" Foreground="{x:Null}" FontWeight="Normal" FontStyle="Normal" IsReadOnly="True" 
                                        MaxWidth="Infinity" MinWidth="0" SortMemberPath="{x:Null}" Visibility="Visible" Width="95" FontSize="13.333" 
                                        FontFamily="Arial">
                    <sdk:DataGridTextColumn.HeaderStyle>
                        <Style TargetType="sdk:DataGridColumnHeader">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Height="150">
                                            <TextBlock>
                                                <Run Text="Prix Total"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </sdk:DataGridTextColumn.HeaderStyle>
                </sdk:DataGridTextColumn>
            </sdk:DataGrid.Columns>
        </sdk:DataGrid>

        <sdk:DataPager x:Name="pagerProduits" 
                       DisplayMode="FirstLastPreviousNextNumeric"
                       NumericButtonCount="3" Height="24" Margin="40,721,53,311" 
                       HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

        <TextBlock x:Name="txtCie" HorizontalAlignment="Left" Margin="102,134,0,0" TextWrapping="Wrap" Text="Cie:" VerticalAlignment="Top" 
                   FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>

        <ComboBox x:Name="comboCie" HorizontalAlignment="Left" Height="22" Margin="150,128,0,0" VerticalAlignment="Top" Width="245"
                  FontFamily="Arial" FontSize="12" Background="White" BorderBrush="Black"/>

        <TextBlock x:Name="txtExpedier" HorizontalAlignment="Left" Height="20" Margin="348,107,0,0" TextWrapping="Wrap" Text="EXPÉDIER À:" 
                   VerticalAlignment="Top" Width="156" FontSize="12" FontFamily="Arial" FontWeight="Bold" TextDecorations="Underline" TextAlignment="Right"/>


        <TextBlock x:Name="txtCieEx" HorizontalAlignment="Left" Margin="478,134,0,0" TextWrapping="Wrap" Text="Cie:" VerticalAlignment="Top" 
                   FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>
        <TextBlock x:Name="txtAdresseEx" HorizontalAlignment="Left" Margin="449,160,0,0" TextWrapping="Wrap" Text="Adresse:" VerticalAlignment="Top" 
                   FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>
        <TextBlock x:Name="txtContactEx" HorizontalAlignment="Left" Margin="449,187,0,0" TextWrapping="Wrap" Text="Contact:" VerticalAlignment="Top" 
        	FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>
        <TextBlock x:Name="txtVilleEx" HorizontalAlignment="Left" Margin="472,215,0,0" TextWrapping="Wrap" Text="Ville:" VerticalAlignment="Top" 
        	FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>
        <TextBlock x:Name="txtCodeEx" HorizontalAlignment="Left" Margin="420,240,0,0" TextWrapping="Wrap" Text="Code Postal:" VerticalAlignment="Top" 
        	FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>
        <TextBlock x:Name="txtContact" HorizontalAlignment="Left" Margin="73,160,0,0" TextWrapping="Wrap" Text="Contact:" VerticalAlignment="Top" 
        	FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>
        <TextBlock x:Name="txtTel" HorizontalAlignment="Left" Margin="106,187,0,0" TextWrapping="Wrap" Text="Tél:" VerticalAlignment="Top" 
        	FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>
        <TextBlock x:Name="txtFax" HorizontalAlignment="Left" Margin="99,215,0,0" TextWrapping="Wrap" Text="Fax:" VerticalAlignment="Top" 
        	FontFamily="Arial" FontSize="14.667" TextAlignment="Right"/>


        <Rectangle HorizontalAlignment="Left" Height="100" Margin="39,330,0,0" Stroke="Black" VerticalAlignment="Top" Width="742"/>

        <TextBlock x:Name="textBlockProjet" HorizontalAlignment="Left" Height="15" Margin="39,286,0,0" TextWrapping="Wrap" Text="PROJET:" 
                   VerticalAlignment="Top" Width="62" TextAlignment="Right" FontSize="13.333" FontFamily="Arial" FontWeight="Bold"/>
        <TextBox x:Name="textBoxProjet" HorizontalAlignment="Left" Height="23" Margin="106,281,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="440" 
                 FontSize="14.667" FontFamily="Arial" IsReadOnly="False" Text="{Binding Screen.ProjetProperty.Nom, Mode=OneTime}" 
                 IsHitTestVisible="False" IsTabStop="False" Background="#FFFAFAFA"/>
        <TextBlock x:Name="textBlockNo" HorizontalAlignment="Left" Height="15" Margin="564,286,0,0" TextWrapping="Wrap" Text="NO:" 
                   VerticalAlignment="Top" Width="40" TextAlignment="Right" FontSize="13.333" FontFamily="Arial" FontWeight="Bold"/>
        <TextBox x:Name="textBoxNo" HorizontalAlignment="Left" Height="23" Margin="609,281,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="148" 
                 FontSize="14.667" FontFamily="Arial" IsReadOnly="False" Text="{Binding Screen.ProjetProperty.NumProjet, Mode=OneTime}"
                 IsHitTestVisible="False" IsTabStop="False" Background="#FFFAFAFA"/>

        <TextBlock x:Name="lblVendeurs" HorizontalAlignment="Left" Height="25" Margin="560,330,0,0" TextWrapping="Wrap" Text="VENDEURS" VerticalAlignment="Top" 
        	Width="102" TextAlignment="Left" FontSize="12"/>

        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="150,156,0,0" VerticalAlignment="Top" Width="245"
                             Text="{Binding Screen.ProjetProperty.VenduContact, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="12" FontFamily="Arial"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="150,184,0,0" VerticalAlignment="Top" Width="245"
                             Text="{Binding Screen.ProjetProperty.VenduTel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10.667" FontFamily="Arial"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="150,212,0,0" VerticalAlignment="Top" Width="245"
                             Text="{Binding Screen.ProjetProperty.VenduFax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10.667" FontFamily="Arial"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="536,128,0,0" VerticalAlignment="Top" Width="245"
                             Text="{Binding Screen.ProjetProperty.ExpCie, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10.667" FontFamily="Arial"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="536,156,0,0" VerticalAlignment="Top" Width="245"
                             Text="{Binding Screen.ProjetProperty.ExpAdresse, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10.667" FontFamily="Arial"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="536,184,0,0" VerticalAlignment="Top" Width="245"
                             Text="{Binding Screen.ProjetProperty.ExpContact, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10.667" FontFamily="Arial"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="536,212,0,0" VerticalAlignment="Top" Width="245"
                             Text="{Binding Screen.ProjetProperty.ExpVille, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10.667" FontFamily="Arial"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="536,240,0,0" VerticalAlignment="Top" Width="245"
                             Text="{Binding Screen.ProjetProperty.ExpCodePostal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10.667" FontFamily="Arial"/>
        <CheckBox x:Name="checkBoxMiseMarche" Content="Mise en marche incluse" HorizontalAlignment="Left" Height="23" Margin="39,982,0,0" VerticalAlignment="Top" 
                  Width="173" FontFamily="Arial" FontSize="14.667" IsChecked="{Binding Screen.ProjetProperty.MiseMarche, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <CheckBox x:Name="checkBoxTransport" Content="Transport inclus" HorizontalAlignment="Left" Height="23" Margin="39,1010,0,0" VerticalAlignment="Top" 
                  Width="173" FontFamily="Arial" FontSize="14.667" IsChecked="{Binding Screen.ProjetProperty.Transport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBox x:Name="textBoxSousTotal" HorizontalAlignment="Left" Height="20" Margin="641,870,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="140" 
                 Text="{Binding Screen.ProjetProperty.SousTotal, Converter={StaticResource CurrencyConverter}, Mode=OneWay}" TextAlignment="Right"
                 IsHitTestVisible="False" IsTabStop="False" Background="#FFFAFAFA"/>
        <TextBox x:Name="textBoxTaux" HorizontalAlignment="Left" Height="20" Margin="641,894,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="140" 
                 IsReadOnly="false" Text="{Binding Screen.ProjetProperty.Taux, Mode=TwoWay}" TextAlignment="Right"/>
        <TextBox x:Name="textBoxTotal" HorizontalAlignment="Left" Height="20" Margin="641,919,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="140" 
                 Text="{Binding Screen.ProjetProperty.Total, Converter={StaticResource CurrencyConverter}, Mode=OneWay}" TextAlignment="Right"
                 IsHitTestVisible="False" IsTabStop="False" Background="#FFFAFAFA"/>

        <TextBlock x:Name="textBlockSousTotal" HorizontalAlignment="Left" Height="20" Margin="521,870,0,0" TextWrapping="Wrap" Text="SOUS-TOTAL:" VerticalAlignment="Top" 
                   Width="115" FontFamily="Arial" FontSize="12" TextAlignment="Right"/>
        <TextBlock x:Name="textBlockTaux" HorizontalAlignment="Left" Height="20" Margin="521,894,0,0" TextWrapping="Wrap" Text="TAUX (US):" VerticalAlignment="Top" 
        	Width="115" FontFamily="Arial" FontSize="12" TextAlignment="Right"/>
        <TextBlock x:Name="textBlockTotal" HorizontalAlignment="Left" Height="20" Margin="521,919,0,0" TextWrapping="Wrap" Text="TOTAL (CAN$):" VerticalAlignment="Top" 
        	Width="115" FontFamily="Arial" FontSize="12" TextAlignment="Right" FontWeight="Bold"/>

        <TextBlock x:Name="lblCommande" HorizontalAlignment="Left" Height="25" Margin="39,330,0,0" TextWrapping="Wrap" Text="# COMMANDE" VerticalAlignment="Top" 
                   Width="160" TextAlignment="Center"/>
        <TextBlock x:Name="lblCommandeDate" HorizontalAlignment="Left" Height="25" Margin="39,378,0,0" TextWrapping="Wrap" Text="DATE DE COMMANDE" VerticalAlignment="Top" 
        	Width="160" TextAlignment="Center"/>

        <TextBlock x:Name="textBlockOpenFlat" HorizontalAlignment="Left" Height="20" Margin="78,870,0,0" TextWrapping="Wrap" Text="FRAIS DE TRANSPORT OPEN FLAT BED:" 
                   VerticalAlignment="Top" Width="283" FontSize="13.333" FontFamily="Arial" TextAlignment="Right"/>
        <TextBox x:Name="textBoxOpenFlat" HorizontalAlignment="Left" Height="20" Margin="380,870,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="140" 
                 Text="{Binding Screen.ProjetProperty.LivraisonFlatBedPrix, Converter={StaticResource CurrencyConverter}, Mode=TwoWay, UpdateSourceTrigger=Default}" TextAlignment="Right"/>
        <TextBlock x:Name="textBlockLtl" HorizontalAlignment="Left" Height="20" Margin="78,889,0,0" TextWrapping="Wrap" Text="LIVRAISON LTL (VOIR LISTE):" 
        	VerticalAlignment="Top" Width="283" FontSize="13.333" FontFamily="Arial" TextAlignment="Right"/>
        <TextBox x:Name="textBoxLtl" HorizontalAlignment="Left" Height="20" Margin="380,890,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="140" 
                 Text="{Binding Screen.ProjetProperty.LivraisonLtlPrix, Converter={StaticResource CurrencyConverter}, Mode=TwoWay, UpdateSourceTrigger=Default}" TextAlignment="Right"/>
        <TextBlock x:Name="textBlockMiseMarche" HorizontalAlignment="Left" Height="20" Margin="78,909,0,0" TextWrapping="Wrap" Text="MISE EN MARCHE:" 
        	VerticalAlignment="Top" Width="283" FontSize="13.333" FontFamily="Arial" TextAlignment="Right"/>
        <TextBox x:Name="textBoxMiseMarche" HorizontalAlignment="Left" Height="20" Margin="380,910,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="140" 
                 Text="{Binding Screen.ProjetProperty.MiseMarchePrix, Converter={StaticResource CurrencyConverter}, Mode=TwoWay, UpdateSourceTrigger=Default}" TextAlignment="Right"/>
        <TextBlock x:Name="textBlockLocationGrue" HorizontalAlignment="Left" Height="20" Margin="78,930,0,0" TextWrapping="Wrap" Text="LOCATION DE GRUE ($560 / BLOC DE 4H):" 
        	VerticalAlignment="Top" Width="283" FontSize="13.333" FontFamily="Arial" TextAlignment="Right"/>
        <TextBox x:Name="textBoxLocationGrue" HorizontalAlignment="Left" Height="20" Margin="380,930,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="140" 
                 Text="{Binding Screen.ProjetProperty.LocationGruePrix, Converter={StaticResource CurrencyConverter}, Mode=TwoWay, UpdateSourceTrigger=Default}" TextAlignment="Right"/>

        <Button x:Name="button" Content="IMPRIMER" HorizontalAlignment="Left" Height="28" Margin="364,1000,0,0" VerticalAlignment="Top" Width="140" Click="button_Click"/>
        <TextBlock x:Name="lblLivraison" HorizontalAlignment="Left" Height="25" Margin="204,330,0,0" TextWrapping="Wrap" Text="LIVRAISON" VerticalAlignment="Top" 
        	Width="241" TextAlignment="Left" FontSize="12"/>
        <TextBlock x:Name="lblLivraisonUnite" HorizontalAlignment="Left" Height="25" Margin="204,355,0,0" TextWrapping="Wrap" Text="DATE LIVRAISON (UNITÉ):" VerticalAlignment="Top" 
        	Width="241" TextAlignment="Left"/>
        <TextBlock x:Name="lblFinProdSolin" HorizontalAlignment="Left" Height="25" Margin="204,380,0,0" TextWrapping="Wrap" Text="DATE DE FIN DE PRODUCTION (SOLIN):" VerticalAlignment="Top" 
        	Width="241" TextAlignment="Left"/>
        <Rectangle HorizontalAlignment="Left" Height="50" Margin="39,330,0,0" Stroke="Black" VerticalAlignment="Top" Width="160"/>
        <Rectangle HorizontalAlignment="Left" Height="52" Margin="39,378,0,0" Stroke="Black" VerticalAlignment="Top" Width="160"/>

        <TextBox x:Name="txtNumCommande" HorizontalAlignment="Left" Height="29" Margin="39,351,0,0" VerticalAlignment="Top" Width="160"
                             Text="{Binding Screen.ProjetProperty.NumCommande, Mode=TwoWay}" TextAlignment="Center"/>
        <sdk:DatePicker x:Name="pickerDateCommande" HorizontalAlignment="Left" Height="23" Margin="40,405,0,0" VerticalAlignment="Top" Width="158"
                        SelectedDate="{Binding Screen.ProjetProperty.DateCommande, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Rectangle HorizontalAlignment="Left" Height="100" Margin="198,330,0,0" Stroke="Black" VerticalAlignment="Top" Width="358"/>
        <sdk:DatePicker x:Name="pickerDateSolin" HorizontalAlignment="Left" Height="23" Margin="445,382,0,0" VerticalAlignment="Top" Width="105"
                        SelectedDate="{Binding Screen.ProjetProperty.DateLivraisonSolin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <sdk:DatePicker x:Name="pickerDateUnite" HorizontalAlignment="Left" Height="23" Margin="445,357,0,0" VerticalAlignment="Top" Width="105"
                        SelectedDate="{Binding Screen.ProjetProperty.DateLivraisonUnite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <Rectangle HorizontalAlignment="Left" Height="100" Margin="555,330,0,0" Stroke="Black" VerticalAlignment="Top" Width="226"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="560,351,0,0" VerticalAlignment="Top" Width="145"
                             Text="{Binding Screen.ProjetProperty.Vendeur.NomEtNum, Mode=OneWay}" IsHitTestVisible="False" IsTabStop="False" Background="#FFFAFAFA"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="560,376,0,0" VerticalAlignment="Top" Width="145"
                             ItemsSource="{Binding Screen.VendeurQuery, Mode=OneWay}" ValueMemberPath="NomEtNum"
                             Text="{Binding Screen.ProjetProperty.SecondVendeur, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <sdk:AutoCompleteBox HorizontalAlignment="Left" Height="22" Margin="560,401,0,0" VerticalAlignment="Top" Width="145"
                             ItemsSource="{Binding Screen.VendeurQuery, Mode=OneWay}" ValueMemberPath="NomEtNum"
                             Text="{Binding Screen.ProjetProperty.TroisiemeVendeur, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox x:Name="txtComm1" HorizontalAlignment="Left" Height="22" Margin="710,351,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="61"
                 TextAlignment="Right" Text="{Binding Screen.ProjetProperty.CommissionVendeur, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox x:Name="txtComm2" HorizontalAlignment="Left" Height="22" Margin="710,376,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="61"
                 TextAlignment="Right" Text="{Binding Screen.ProjetProperty.CommissionSecond, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox x:Name="txtComm3" HorizontalAlignment="Left" Height="22" Margin="710,401,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="61"
                 TextAlignment="Right" Text="{Binding Screen.ProjetProperty.CommissionTroisieme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <Image x:Name="nagas" HorizontalAlignment="Left" Height="88" VerticalAlignment="Top" Width="231" Source="Images/logo nagas.png" Margin="10,0,0,0"/>
        <Image x:Name="bousquet" HorizontalAlignment="Left" Height="88" VerticalAlignment="Top" Width="241" Source="Images/logo_bousquet.jpg"/>

        <TextBlock x:Name="txtVilleEx_Copy" HorizontalAlignment="Left" Margin="710,332,0,0" TextWrapping="Wrap" Text="COMM. (%)" VerticalAlignment="Top" 
        	FontFamily="Arial" FontSize="12" Width="71"/>
        <TextBlock x:Name="spacer_tr" HorizontalAlignment="Left" Height="21" Margin="728,0,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="106"/>
        <TextBlock x:Name="spacer_bl" HorizontalAlignment="Left" Margin="0,1040,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top"/>
        <Rectangle Fill="#FFFDFDFD" HorizontalAlignment="Left" Height="25" Margin="617,985,0,0" Stroke="Black" VerticalAlignment="Top" Width="140"/>
        <TextBlock x:Name="txtCommande" HorizontalAlignment="Left" Height="35" Margin="617,1010,0,0" TextWrapping="Wrap" Text="# COMMANDE SYSTÈME                    " 
                   VerticalAlignment="Top" Width="175" FontWeight="Bold" FontSize="12"/>

        <!--Canvas Name="GridCanvas" HorizontalAlignment="Left" Height="410" Margin="40,456,0,0" VerticalAlignment="Top" Width="741"/-->

        <CheckBox x:Name="isBousquet" HorizontalAlignment="Left" Height="22" Margin="641,83,0,0" VerticalAlignment="Top" Width="26"
                  IsChecked="{Binding Path=Screen.ProjetProperty.IsBousquet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Click="isBousquet_Click" Loaded="isBousquet_Loaded"/>
        <TextBlock x:Name="txtBousquet" HorizontalAlignment="Left" Height="22" Margin="536,83,0,0" TextWrapping="Wrap" Text="BOUSQUET" 
                   VerticalAlignment="Top" Width="89" TextAlignment="Right"/>
        <TextBlock x:Name="txtNagas" HorizontalAlignment="Left" Height="22" Margin="676,83,0,0" TextWrapping="Wrap" Text="NAGAS" 
                   VerticalAlignment="Top" Width="89" TextAlignment="Left"/>

        <Rectangle Fill="Black" HorizontalAlignment="Left" Height="1" Margin="40,777,0,0" Stroke="Black" VerticalAlignment="Top" Width="741"
                   Opacity="0.2"/>
        <Rectangle Fill="Black" HorizontalAlignment="Left" Height="1" Margin="40,802,0,0" Stroke="Black" VerticalAlignment="Top" Width="741"
            Opacity="0.2"/>
        <Rectangle Fill="Black" HorizontalAlignment="Left" Height="1" Margin="40,827,0,0" Stroke="Black" VerticalAlignment="Top" Width="741"
            Opacity="0.2"/>
        <Rectangle Fill="Black" HorizontalAlignment="Left" Height="1" Margin="40,852,0,0" Stroke="Black" VerticalAlignment="Top" Width="741"
            Opacity="0.2"/>

    </Grid>
</UserControl>
